{"version":3,"sources":["images/mountains.jpg","images/pattern.jpg","components/Jumbotron.js","components/Nav.js","components/TechModal.js","components/Images.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Jumbo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tech","name","element","react_default","a","createElement","di_index_esm","styles","jt","background","color","colBox","display","flexDirection","justifyContent","alignItems","textAlign","marginLeft","marginRight","minWidth","marginTop","marginBottom","state","console","log","Jumbotron","fluid","style","Container","fontSize","className","href","index_esm","Row","Component","React","TechModal","techArray","project","technology","Modal","isOpen","toggle","ModalHeader","image","CardImg","top","src","alt","width","maxHeight","objectFit","ModalBody","description","displayTechList","ModalFooter","codebase","target","rel","Button","deployedURL","onClick","Images","modal","currentProject","bind","assertThisInitialized","data","setState","prevState","includes","_this2","CardDeck","map","Card","CardBody","CardTitle","CardText","displayIcons","backgroundColor","handleTechClick","components_TechModal","Home","bg","backgroundImage","concat","MyBackgroundImage","backgroundSize","minHeight","imgArea","paddingLeft","paddingRight","Jumbotron_Jumbo","components_Images","App","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e63fbf3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountains.803b70c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pattern.2f41062d.jpg\";","import React, { Component } from 'react';\nimport { Jumbotron, Container, Col, Row } from 'reactstrap';\nimport MyBackgroundImage from '../images/pattern.jpg';\nimport { IoLogoLinkedin, IoLogoGithub } from \"react-icons/io\"\nimport projects from './../projects.json'\nimport { DiCss3, \n    DiHtml5, \n    DiReact, \n    DiJavascript, \n    DiBootstrap, \n    DiAppstore, \n    DiAndroid, \n    DiMongodb,\n    DiMysql,\n    DiNodejsSmall,\n} from \"react-icons/di\";\n\n\nexport default class Jumbo extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          tech: []\n        };\n      }\n      tech = [\n            { \n                name: \"javascript\",\n                element: <DiJavascript />\n            }, \n            {\n                name: \"node\",\n                element: <DiNodejsSmall />\n            }, \n      ]\n    styles={\n        jt: {\n            // backgroundColor: 'rgb(114,247,217,0.4)',\n            // background: 'radial-gradient(circle, rgb(0, 0, 0, 0.7) 0%, rgb(226,60,97, 0.5) 100%)',\n            background: 'linear-gradient(rgb(49,50,92, 0.5), rgb(0,0,0, 0.5))',\n            color: 'white'\n            // backgroundColor: 'white', \n            // opacity: .5\n        },\n        // boxAround: {\n        //     borderColor: '#1572B6',\n        //     borderWidth: 4,\n        //     borderStyle: 'solid',\n        //     lineHeight: 1,\n        //     paddingBottom: 5,\n        //     paddingTop: 5,\n        //     width: 150,\n        // },\n        colBox: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            // borderColor: '#1572B6',\n            // borderWidth: 4,\n            // borderStyle: 'solid',\n            textAlign: 'center',\n            // backgroundColor: 'pink',\n            // opacity: 0.6,\n            marginLeft: 20,\n            marginRight: 20,\n            minWidth: 200,\n            marginTop: 20,\n            marginBottom: 20,\n        }\n    }\n    render() {\n        console.log(this.tech)\n        return (\n            <div>\n            <Jumbotron fluid style={this.styles.jt}>\n              <Container fluid >\n              <h1 style={{fontSize: 60}} className=\"hover-uppercase\">karina starling mills</h1>\n              <h3>&lt; WebDeveloper /&gt;</h3>\n              {/* <div>{this.tech[0].element}</div> */}\n              <a href=\"https://www.linkedin.com/in/karinamills/\"><IoLogoLinkedin style={{fontSize: 50, color: \"white\"}}/></a>\n              <a href=\"https://github.com/ksmills88\"><IoLogoGithub style={{fontSize: 50, color: \"white\"}}/></a>\n\n              {/* <h3 className=\"lead\" style={this.styles.boxAround}>I build cool things in tech. </h3> */}\n              <Row>\n                {/* <Col style={this.styles.colBox}>\n                    <div style={this.styles.boxAround}>\n                        <h3 className=\"lead\" style={this.styles.tag1}>be creative.</h3>\n                        <h3 className=\"lead\" style={this.styles.tag2}>be kind.</h3>\n                        <h3 className=\"lead\" style={this.styles.tag3}>be a \n                            <strong><span style={{color: 'red'}}>  u</span>\n                            <span style={{color: 'orange'}}>n</span>\n                            <span style={{color: 'yellow'}}>i</span>\n                            <span style={{color: 'green'}}>c</span>\n                            <span style={{color: 'blue'}}>o</span>\n                            <span style={{color: 'purple'}}>r</span>\n                            <span style={{color: 'pink'}}>n</span></strong>.\n                        </h3>\n                    </div>\n                </Col> */}\n                {/* <Col style={this.styles.colBox}>\n                <Row style={{display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center',}}>\n                    <DiReact style={{fontSize: 50, color: \"#80D8F7\"}}/>\n                    <DiHtml5 style={{fontSize: 50, color: \"#E44D26\"}}/>\n                    <DiCss3 style={{fontSize: 50, color: \"#1572B6\"}}/>\n                    <DiJavascript style={{fontSize: 50, color: \"#F0DB4F\"}}/>\n                    <DiNodejsSmall style={{fontSize: 50, color: \"#83CD29\"}}/>\n                    <DiMongodb style={{fontSize: 50, color: \"#4FAA41\"}}/>\n                    <DiMysql style={{fontSize: 50, color: \"#00618A\"}}/>\n                    </Row>\n                    </Col> */}\n                </Row>\n              </Container>\n            </Jumbotron>\n          </div>\n        );\n    }\n}","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\n  import { DiGithub } from \"react-icons/di\";\n  import { IoLogoLinkedin, IoLogoGithub } from \"react-icons/io\"\n\nexport default class MyNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Portfolio</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"https://www.linkedin.com/in/karinamills/\"><IoLogoLinkedin style={{fontSize: 50, color: \"#3077B0\"}}/></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/ksmills88\"><IoLogoGithub style={{fontSize: 50, color: \"#24292D\"}}/></NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, CardImg } from 'reactstrap';\n\nclass TechModal extends React.Component {\n  displayTechList(techArray) {\n    //   techArray.split(',')\nconsole.log(techArray)\n  }\n  render() {\n      console.log(this.props.project.tech)\n      const {project} = this.props\n      const technology = this.props.project.tech\n      console.log(technology)\n    return (\n      <div>\n        {/* <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button> */}\n        <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.props.toggle}>{project.name}</ModalHeader>\n          {project.image ? <CardImg top src={project.image} alt=\"Card image cap\" \n                    style={{width: '100%',\n                    maxHeight: 500,\n                    objectFit: 'contain'}} /> :null}\n          <ModalBody>\n              {project.description}\n              {this.displayTechList(technology)}\n              {/* <ul>\n                  {technology.map(tech=>(\n                      <li>{tech}</li>\n                  ))}\n              </ul> */}\n          </ModalBody>\n          <ModalFooter>\n            {project.codebase ? \n            <a href={project.codebase} target=\"_blank\" rel=\"noopener noreferrer\"><Button color=\"primary\">View Code on GitHub</Button></a>: null}\n            {project.deployedURL ? \n            <a href={project.deployedURL} target=\"_blank\" rel=\"noopener noreferrer\"><Button color=\"primary\">See the Live App</Button></a> :null}{' '}\n            <Button color=\"primary\" onClick={this.props.toggle}>Close</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TechModal;","import React, { Component} from 'react';\nimport { Card, Button, CardImg, CardTitle, \n    CardText, CardDeck, CardBody } from 'reactstrap';\nimport data from './../projects.json'\n\nimport { DiCss3, \n    DiHtml5, \n    DiReact, \n    DiJavascript, \n    DiBootstrap, \n    DiAppstore, \n    DiAndroid, \n    DiMongodb,\n    DiMysql,\n    DiNodejsSmall,\n    DiApple,\n} from \"react-icons/di\";\nimport TechModal from './TechModal';\n\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          modal: false,\n          currentProject: {}\n        };\n    \n        this.toggle = this.toggle.bind(this);\n      }\n      handleTechClick(data) {\n        this.setState({currentProject: data})\n        this.toggle()\n      }\n      toggle() {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n\n    displayIcons(tech) {\n        //project.tech\n        return(\n            <div>\n            {tech.includes('react') ? \n            <DiReact style={{fontSize: 50, color: \"#80D8F7\"}}/> : null}\n            {tech.includes('javascript') ? \n            <DiJavascript style={{fontSize: 50, color: \"#F0DB4F\"}}/> : null}\n            {tech.includes('html') ? \n            <DiHtml5 style={{fontSize: 50, color: \"#E44D26\"}}/> : null}\n            {tech.includes('css') ? \n            <DiCss3 style={{fontSize: 50, color: \"#1572B6\"}}/> : null}            \n            {tech.includes('node') ? \n            <DiNodejsSmall style={{fontSize: 50, color: \"#83CD29\"}}/> : null}\n            {tech.includes('mongo') ? \n            <DiMongodb style={{fontSize: 50, color: \"#4FAA41\"}}/> : null}\n            {tech.includes('mysql') ? \n            <DiMysql style={{fontSize: 50, color: \"white\"}}/> : null}\n            {tech.includes('android') ? \n            <DiAndroid style={{fontSize: 50, color: \"#a4c639\"}}/> : null}\n            {tech.includes('appstore') ? \n            <DiAppstore style={{fontSize: 50, color: \"#4DA9F2\"}}/> : null}\n            {tech.includes('appstore') ? \n            <DiApple style={{fontSize: 50, color: \"black\"}}/> : null}\n\n            </div>\n            \n\n\n\n        )\n    }\n\n    render() {\n    console.log(data)\n        return (\n            <CardDeck>\n                {data.map(project=>(\n                    \n                    <Card style={{minWidth:500, marginTop:30}} className=\"image-card\">\n                {/* <Card style={{minWidth:300, marginTop:30, background: 'radial-gradient(circle, rgb(255, 255, 255, 0.4) 0%, rgb(0, 0, 255, 0.4) 100%)', borderColor: \"#71F6DB\", borderWidth: 5}}> */}\n\n                <CardBody>\n                <CardTitle style={{fontSize: 30, color: 'white'}}>{project.name}</CardTitle>\n                {/* <CardImg top src={project.image} alt=\"Card image cap\" \n                    style={{width: '100%',\n                    height: 300,\n                    objectFit: 'contain'}} /> */}\n                    <CardText style={{color: \"white\", fontSize: 20}}>{project.description}</CardText>\n                    <div style={{marginTop: 20, marginBottom: 20}}>{this.displayIcons(project.tech)}</div>\n                    <Button style={{backgroundColor: \"#E23C61\"}}onClick={()=>this.handleTechClick(project)}>more info</Button>\n                <a href={project.deployedURL} target=\"_blank\" rel=\"noopener noreferrer\"><Button style={{marginLeft:5, marginRight:5, backgroundColor: \"#2A6771\"}}>see project</Button></a>\n                {project.codebase ? \n                    <a href={project.codebase} target=\"_blank\" rel=\"noopener noreferrer\"><Button style={{backgroundColor: \"#ED6F2E\"}}>github</Button></a> : null\n                }\n                </CardBody>\n            </Card>\n                ))}\n                \n            {/* <Card>\n                <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=256%C3%97180&w=256&h=180\" alt=\"Card image cap\" />\n                <CardBody>\n                <CardTitle>Card title</CardTitle>\n                <CardSubtitle>Card subtitle</CardSubtitle>\n                <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\n                <Button>Button</Button>\n                </CardBody>\n            </Card>\n            <Card>\n                <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=256%C3%97180&w=256&h=180\" alt=\"Card image cap\" />\n                <CardBody>\n                <CardTitle>Card title</CardTitle>\n                <CardSubtitle>Card subtitle</CardSubtitle>\n                <CardText>This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</CardText>\n                <Button>Button</Button>\n                </CardBody>\n            </Card>\n            <Card>\n                <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=256%C3%97180&w=256&h=180\" alt=\"Card image cap\" />\n                <CardBody>\n                <CardTitle>Card title</CardTitle>\n                <CardSubtitle>Card subtitle</CardSubtitle>\n                <CardText>This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</CardText>\n                <Button>Button</Button>\n                </CardBody>\n            </Card> */}\n            <TechModal isOpen={this.state.modal} toggle={this.toggle} project={this.state.currentProject}/>\n\n            </CardDeck>\n        );\n    }\n};\n\nexport default Images;","import React, { Component } from 'react';\nimport Jumbo from '../components/Jumbotron';\nimport MyNav from '../components/Nav';\nimport {Jumbotron} from 'reactstrap'\nimport MyBackgroundImage from '../images/mountains.jpg'\n\nimport { DiCss3, \n    DiHtml5, \n    DiReact, \n    DiJavascript, \n    DiBootstrap, \n    DiAppstore, \n    DiAndroid, \n    DiMongodb,\n    DiMysql,\n    DiNodejsSmall,\n} from \"react-icons/di\";\nimport Images from '../components/Images';\n\nexport default class Home extends Component {\n\n    styles={\n        bg: {\n            backgroundImage: `url(${MyBackgroundImage})`,\n            backgroundSize: 'cover' ,\n            // marginLeft: -200,\n            // marginRight: -200,\n            minHeight: 1500,\n        },\n        imgArea: {\n            paddingLeft:30,\n            paddingRight:30           \n        }\n    }\n    render() {\n        return (\n            <div className=\"Home\" style={this.styles.bg} >\n            {/* add jumbotron or other here */}\n            {/* <MyNav /> */}\n            <Jumbo />\n         \n                \n                {/* <DiReact style={{fontSize: 50, color: \"#80D8F7\"}}/>\n                <DiHtml5 style={{fontSize: 50, color: \"#E44D26\"}}/>\n                <DiCss3 style={{fontSize: 50, color: \"#1572B6\"}}/>\n                <DiJavascript style={{fontSize: 50, color: \"#F0DB4F\"}}/>\n                <DiNodejsSmall style={{fontSize: 50, color: \"#83CD29\"}}/>\n                <DiMongodb style={{fontSize: 50, color: \"#4FAA41\"}}/>\n                <DiMysql style={{fontSize: 50, color: \"#00618A\"}}/> */}\n\n                {/* <DiAppstore style={{fontSize: 50, color: \"black\"}}/>\n                <DiAndroid style={{fontSize: 50, color: \"black\"}}/> */}\n                <div style={this.styles.imgArea}>\n                    <Images />\n                </div>\n            {/* <a style={{backgroundColor:'black',color:'white',textDecoration:'none',padding:'4px 6px',fontFamily:'-apple-system, BlinkMacSystemFont, &quot;San Francisco&quot;, &quot;Helvetica Neue&quot;, Helvetica, Ubuntu, Roboto, Noto, &quot;Segoe UI&quot;, Arial, sans-serif',fontSize:12,fontWeight:'bold',lineHeight:'1.2',display:'inline-block',borderRadius:3, width: 190}} href=\"https://unsplash.com/@stairhopper?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Download free do whatever you want high-resolution photos from Alex Holyoake\"><span style={{display:'inline-block',padding:'2px 3px'}}><svg xmlns=\"http://www.w3.org/2000/svg\" style={{height:12,width:'auto',position:'relative',verticalAlign:'middle',top:'-2px',fill:'white'}}><title>unsplash-logo</title><path d=\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\"></path></svg></span><span style={{display:'inline-block',padding:'2px 3px'}}>Alex Holyoake</span></a> */}\n                <Jumbotron className=\"footer\">\n                    <h3>Portfolio created with <DiReact style={{color:\"#80D8F7\", fontSize: 35}}/></h3>\n                    <p>\n                        Photo by Tom Gainor on Unsplash<br/>\n                        Copyright © 2019 Karina Mills\n                    </p>\n                </Jumbotron>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}